// Code generated by goctl. DO NOT EDIT!
// Source: register.proto

package rpc

import (
	"context"

	"rj97807_work_serve/rpc/register/types/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MailRequest  = rpc.MailRequest
	MailResponse = rpc.MailResponse

	Rpc interface {
		GetMailChecked(ctx context.Context, in *MailRequest, opts ...grpc.CallOption) (*MailResponse, error)
	}

	defaultRpc struct {
		cli zrpc.Client
	}
)

func NewRpc(cli zrpc.Client) Rpc {
	return &defaultRpc{
		cli: cli,
	}
}

func (m *defaultRpc) GetMailChecked(ctx context.Context, in *MailRequest, opts ...grpc.CallOption) (*MailResponse, error) {
	client := rpc.NewRpcClient(m.cli.Conn())
	return client.GetMailChecked(ctx, in, opts...)
}
